#===============================================================================
# common variables for all hosts
temprary_download_dir: /tmp/kismatic
init_system_dir: /etc/systemd/system/
init_system_file_extenstion: service
bin_dir: /usr/bin
# Path to local directory that contains the certificates
tls_directory: ../../../generated-certs
#===============================================================================
# binary locations
#TODO use local repos
#etcd
etcd_install_binary_download_name: etcd-{{ etcd_install_binary_version }}-linux-amd64.tar.gz
etcd_install_binary_download_path: https://github.com/coreos/etcd/releases/download/{{ etcd_install_binary_version }}
#kubernetes
kubernetes_binary_path: https://storage.googleapis.com/kubernetes-release/release/v{{ kubernetes_version }}/bin/linux/amd64
#calico
calicoctl_binary_path: https://github.com/projectcalico/calico-containers/releases/download/v{{ calico_ctl_version }}
calico_cni_path: https://github.com/projectcalico/calico-cni/releases/download/v{{ calico_version }}
cni_path: https://github.com/containernetworking/cni/releases/download/v{{ cni_version }}/cni-v{{ cni_version }}.tgz
#===============================================================================
# component versions
#TODO move versions from etcd_k8s and etcd_networking
kubernetes_version: 1.3.6
calico_version: 1.3.1
calico_ctl_version: 0.21.0
calico_docker_version: 0.21.0
cni_version: 0.3.0
#===============================================================================
# service ports
etcd_k8s_client_port: 2379
etcd_networking_client_port: 6666
kubernetes_master_secure_port: 6443
kubernetes_master_insecure_port: 8080
#===============================================================================
# common variables for etcd
# etcd-certificates
etcd_certificates_owner: root
etcd_certificates_group: root
etcd_certificates_mode: 0660
# etcd-install
etcd_install_binary_untared_dir: "{{ temprary_download_dir }}/etcd-{{ etcd_install_binary_version }}-linux-amd64"
etcd_install_executable_owner: 1000
etcd_install_executable_group: 1000
etcd_install_executable_mode: 0775
# etcd-install:etcd.service.j2
etcd_service_template_name: etcd.service.j2
etcd_service_file: "{{ etcd_service_name }}.{{ init_system_file_extenstion }}"
etcd_service_path: "{{ init_system_dir }}/{{ etcd_service_file }}"
etcd_service_owner: root
etcd_service_group: root
etcd_service_mode: 0664
# etcd cluster setup
etcd_service_cluster_string: "{% for host in groups['etcd'] %}{{ host }}=https://{{ host }}:{{ etcd_service_peer_port }}{% if not loop.last %},{% endif %}{% endfor %}"
#etcd_service_cluster_string: "{% for host in groups['etcd'] %}{% if hostvars[host]['inventory_hostname'] is defined %}{{ host }}=https://{{ host }}:{{ etcd_service_peer_port }}{% if not loop.last %},{% endif %}{% endif %}{% endfor %}"
#===============================================================================
# docker-install
docker_install_dir: /etc/docker
docker_installed_path: "{{ docker_install_dir }}/docker.installed"
docker_service_file: "docker.{{ init_system_file_extenstion }}"
docker_service_path: "{{ init_system_dir }}/{{ docker_service_file }}"
#===============================================================================
# calico
# directories
network_plugin_bin_dir: /opt/cni/bin
# paths
calico_conf_path: "{{network_plugin_dir}}/10-calico.conf"
network_environment_path: "/etc/network-environment"
#file modes
calico_executable_mode: 0775
#networking
modify_hosts_file: false
dafault_cidr: 192.168.0.0/16
kubernetes_dns_service_ip: 10.3.0.10
kubernetes_dns_service_addr: https://{{kubernetes_dns_service_ip}}:{{kubernetes_master_secure_port}}
kubernetes_services_cidr: 10.3.0.0/24
kubernetes_pods_cidr: 10.2.0.0/16
calico_network_type: overlay # Default to the overlay type. Must be 'bridged' or 'overlay'
#===============================================================================
# kubernetes
# directories
kubernetes_install_dir: /etc/kubernetes
kubernetes_service_dir: "{{ init_system_dir }}"
network_plugin_dir: /etc/cni/net.d
kubernetes_lib_dir: /var/lib/kubernetes
kubelet_lib_dir: /var/lib/kubelet
# paths
kubernetes_token_auth_path: "{{kubernetes_lib_dir}}/tokens.csv"
kubernetes_authorization_policy_path: "{{kubernetes_lib_dir}}/authorization-policy.json"
kubernetes_kubeconfig_path: "{{kubelet_lib_dir}}/kubeconfig"
# file modes
kubernetes_executable_mode: 0775
kuberntes_service_mode: 0664
kubernetes_certificates_mode: 0660
network_environment_mode: 0660
# owner/group
kuberntes_owner: root
kubernetes_group: root
kubernetes_certificates_owner: root
kubernetes_certificates_group: root
# kubernetes cluster config
kubernetes_cluster_name: kubernetes
kubernetes_admin_password: admin_password
kubernetes_mater_apiserver_count: "{{ groups['master'] | length }}"
kubernetes_master_ip_list: "{% for host in groups['master'] %}https://{{ host }}:{{ kubernetes_master_secure_port }}{% if not loop.last %},{% endif %}{% endfor %}"
kubernetes_master_ip: https://{{ hostvars[groups['master'][0]].internal_ipv4 }}:{{ kubernetes_master_secure_port }} # TODO change to load balancer
# kubernetes certificate config
kubernetes_certificates_ca_file_name: ca.pem
kubernetes_certificates_cert_file_name: kubenode.pem
kubernetes_certificates_key_file_name: kubenode-key.pem
kubernetes_certificates_ca_path: "{{ kubernetes_install_dir }}/{{ kubernetes_certificates_ca_file_name }}"
kubernetes_certificates_cert_path: "{{ kubernetes_install_dir }}/{{ kubernetes_certificates_cert_file_name }}"
kubernetes_certificates_key_path: "{{ kubernetes_install_dir }}/{{ kubernetes_certificates_key_file_name }}"
# etcd IPs
#etcd_networking_cluster_ip_list: "{% for host in groups['etcd'] %}{% if hostvars[host]['inventory_hostname'] is defined %}https://{{ host }}:{{ etcd_networking_client_port }}{% if not loop.last %},{% endif %}{% endif %}{% endfor %}"
#etcd_k8s_cluster_ip_list: "{% for host in groups['etcd'] %}{% if hostvars[host]['inventory_hostname'] is defined %}https://{{ host }}:{{ etcd_k8s_client_port }}{% if not loop.last %},{% endif %}{% endif %}{% endfor %}"
etcd_networking_cluster_ip_list: "{% for host in groups['etcd'] %}https://{{ host }}:{{ etcd_networking_client_port }}{% if not loop.last %},{% endif %}{% endfor %}"
etcd_k8s_cluster_ip_list: "{% for host in groups['etcd'] %}https://{{ host }}:{{ etcd_k8s_client_port }}{% if not loop.last %},{% endif %}{% endfor %}"
#===============================================================================
# PV configs for monitoring and logging
#pv_monitoring_nfs_server_ip: "192.168.99.20"
#pv_monitoring_nfs_dir: "/kubernetes/monitoring"
#pv_monitoring_storage_size: "10Gi"
#pv_logging_nfs_server_ip: "192.168.99.20"
#pv_logging_nfs_dir: "/kubernetes/logging"
#pv_logging_storage_size: "10Gi"
#===============================================================================
# nginx to host binaries
repository_port: 6080
repository_dir: /etc/nginx
repository_mode: 0775
#TODO how to get from vars
etcd_k8s_version: 3.0.4
etcd_networking_version: 2.3.7
#local_repoository_path: http://192.168.99.20:6080 pass this as a runtime parameter for local repository
