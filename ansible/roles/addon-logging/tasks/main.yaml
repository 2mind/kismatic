---
  #check if params are invalid then abort
  - name: verify NFS config is provided
    fail: msg="Invalid pv_logging_nfs_server_ip,pv_logging_nfs_dir or pv_logging_storage_size"
    when: pv_logging_nfs_server_ip is not defined or pv_logging_nfs_dir is not defined or pv_logging_storage_size is not defined

  # setup Elasticsearch-Fluentd-Kibana for logging
  - name: copy pv to remote
    template:
      src: logging-pv.yaml.j2
      dest: /tmp/logging-pv.yaml
  - name: copy pvc to remote
    template:
      src: logging-pvc.yaml.j2
      dest: /tmp/logging-pvc.yaml
  - name: copy es-controller.yaml to remote
    template:
      src: es-controller.yaml.j2
      dest: /tmp/es-controller.yaml
  - name: copy es-service.yaml to remote
    template:
      src: es-service.yaml.j2
      dest: /tmp/es-service.yaml
  - name: copy kibana-controller.yaml to remote
    template:
      src: kibana-controller.yaml.j2
      dest: /tmp/kibana-controller.yaml
  - name: copy kibana-service.yaml to remote
    template:
      src: kibana-service.yaml.j2
      dest: /tmp/kibana-service.yaml
  - name: copy fluentd-es.yaml to remote
    template:
      src: fluentd-es.yaml.j2
      dest: /tmp/fluentd-es.yaml


  # start services
  - name: create logging PV
    command: kubectl apply -f /tmp/logging-pv.yaml
    register: out
  - debug: var=out.stdout_lines

  - name: create logging PVC
    command: kubectl apply -f /tmp/logging-pvc.yaml
    register: out
  - debug: var=out.stdout_lines

  - name: start es-controlle rc
    command: kubectl apply -f /tmp/es-controller.yaml
    register: out
  - debug: var=out.stdout_lines

  - name: start es-service service
    command: kubectl apply -f /tmp/es-service.yaml
    register: out
  - debug: var=out.stdout_lines

  - name: start kibana-controller rc
    command: kubectl apply -f /tmp/kibana-controller.yaml
    register: out
  - debug: var=out.stdout_lines
  # TODO notify user of the port, ingress
  - name: start kibana-service service
    command: kubectl apply -f /tmp/kibana-service.yaml
    register: out
  - debug: var=out.stdout_lines

  - name: start fluentd-es pod
    command: kubectl apply -f /tmp/fluentd-es.yaml
    register: out
  - debug: var=out.stdout_lines
