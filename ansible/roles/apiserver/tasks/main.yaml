---
  # download kubernetes binaries
  - name: download kube-apiserver - v{{ kubernetes_version }}
    get_url:
      url: "{{ local_repoository_path|default(kubernetes_binary_path) }}/kube-apiserver"
      dest: "{{ bin_dir }}"
      mode: "{{ kubernetes_executable_mode }}"

  # kube-apiserver
  - name: copy kube-apiserver.service to remote
    template:
      src: kube-apiserver.service.j2
      dest: "{{ kubernetes_service_dir }}/kube-apiserver.service"
      owner: "{{ kuberntes_owner }}"
      group: "{{ kubernetes_group }}"
      mode: "{{ kuberntes_service_mode }}"
    notify:
      - reload services
      - enable kube-apiserver
      - restart kube-apiserver service
      - verify kube-apiserver is running
      - report status of kube-apiserver

  # force_apiserver_restart=true to force restart
  - name: force restart kube-apiserver
    command: /bin/true
    notify:
      - enable kube-apiserver
      - restart kube-apiserver service
      - verify kube-apiserver is running
      - report status of kube-apiserver
    when: force_apiserver_restart is defined and force_apiserver_restart == "true"
