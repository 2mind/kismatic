---
  # download binaries
  - name: download kubelet - v{{ kubernetes_version }}
    get_url:
      url: "{{ local_repoository_path|default(kubernetes_binary_path) }}/kubelet"
      dest: "{{ bin_dir }}"
      mode: "{{ kubernetes_executable_mode }}"
  # kubelet
  - name: copy kubelet.service to remote
    template:
      src: kubelet.service.j2
      dest: "{{ kubernetes_service_dir }}/kubelet.service"
      owner: "{{ kuberntes_owner }}"
      group: "{{ kubernetes_group }}"
      mode: "{{ kuberntes_service_mode }}"
    notify:
      - reload services
      - enable kubelet
      - restart kubelet service
      - verify kubelet is running
      - report status of kubelet

  # force_kubelet_restart=true to force restart
  - name: force restart kubelet
    command: /bin/true
    notify:
      - reload services
      - enable kubelet
      - restart kubelet service
      - verify kubelet is running
      - report status of kubelet
    when: force_kubelet_restart is defined and force_kubelet_restart == "true"
