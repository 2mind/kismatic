---
    # setup directories
    - name: create {{ docker_install_dir }}
      file:
        path: "{{ docker_install_dir }}"
        state: directory
    # copy certificates
    - name: copy {{ docker_certificates_cert_file_name }}
      copy:
        src: "{{ tls_directory }}/docker.pem"
        dest: "{{ docker_certificates_cert_path }}"
        owner: "{{ docker_certificates_owner }}"
        group: "{{ docker_certificates_group }}"
        mode: "{{ docker_certificate_mode }}"
    - name: copy {{ docker_certificates_key_file_name }}
      copy:
        src: "{{ tls_directory }}/docker-key.pem"
        dest: "{{ docker_certificates_key_path }}"
        owner: "{{ docker_certificates_owner }}"
        group: "{{ docker_certificates_group }}"
        mode: "{{ docker_certificate_mode }}"

    # Setup Docker Registry
    - name: verify if docker registry container is running # TODO replace with RPM
      shell: docker ps | grep registry
      register: docker_ps_registry
      ignore_errors: yes # dont fail, next task will start it if not running
      changed_when: false

    - name: download docker.registry
      command: curl https://www.dropbox.com/s/qtpor9ok3rylk1y/registry.tar?dl=1 --output /tmp/registry.tar -L
      when: docker_ps_registry|failed

    - name: load docker registry from file
      command: docker load --input /tmp/registry.tar
      when: docker_ps_registry|failed

    - name: start docker registry container
      command: docker run -d -p 5000:5000 --restart=always --name registry -v {{docker_install_dir}}:/certs -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/{{docker_certificates_cert_file_name}} -e REGISTRY_HTTP_TLS_KEY=/certs/{{docker_certificates_key_file_name}} registry:2
      when: docker_ps_registry|failed
